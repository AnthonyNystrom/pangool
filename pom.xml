<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.datasalt.pangool</groupId>
  <artifactId>pangool</artifactId>
  <version>0.40-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>Pangool</name>
  <url>http://www.datasalt.com</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <modules>
    <module>core</module>
    <module>examples</module>
    <module>benchmark</module>
    <module>pangool-flow</module>
  </modules>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.8</version>
        <configuration>	
          <downloadSources>true</downloadSources>
        </configuration>
      </plugin>
	<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.12</version>
          <configuration>
            <includes>
              <!-- Pangool naming convention for JUnit tests -->
              <include>**/Test**</include>
            </includes>
            <excludes>
              <!-- A few innner classes are not to be tested -->
              <exclude>**/*$*</exclude>
              <!-- exclude the generated classes under apache.avro.test, some of
                these match **/Test** and are not JUnit tests -->
              <!--exclude>**/apache/avro/test/**</exclude-->
            </excludes>
            <enableAssertions>false</enableAssertions>
            <!-- some IPC tests hang if not run in a separate JVM -->
            <forkMode>always</forkMode>
            <!-- TestSpecificCompiler instantiates a Java compiler to test output results,
                 this does not work with a manifest-only-jar to set the classpath for the javac.
                 This may cause problems on some platforms.
                 See http://maven.apache.org/plugins/maven-surefire-plugin/examples/class-loading.html
                 for more information. -->
            <useManifestOnlyJar>false</useManifestOnlyJar>
            <!-- configures unit test standard error and standard out to go to a file per test
                 rather than the console. -->
            <redirectTestOutputToFile>true</redirectTestOutputToFile>
            <failIfNoTests>false</failIfNoTests>
            <!--systemPropertyVariables>
              <test.dir>${project.basedir}/target/</test.dir>
            </systemPropertyVariables-->
          </configuration>
        </plugin>
	<plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <!--version>${checkstyle-plugin.version}</version-->
          <configuration>
            <configLocation>checkstyle.xml</configLocation>
          </configuration>
          <!-- Runs by default in the verify phase  (mvn verify or later in the build cycle)
               the 'check' goal will fail the build if it does not pass.  "mvn checkstyle:check"
               will do this alone, or "mvn checkstyle:checkstyle" will report but not break  -->
          <executions>
            <execution>
              <id>checkstyle-check</id>
              <phase>test</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
    </plugins>
  </build>

</project>
